import{n as s,ak as a,P as d,an as g}from"./index-tiG3UDW2.js";async function E(t,r){try{const e=await s.get(`${a}/categories/${t}/products?limit=${d}&offset=${r}`),o=await $(t);return{products:e.data,count:o}}catch(e){throw new Error(`Error fetching category ${t} products: ${e.message}`)}}async function y(t,r){try{const e=await s.get(`${a}/categories/${t}/products?limit=${g}&offset=${r}`),o=await $(t);return{products:e.data,count:o}}catch(e){throw new Error(`Error fetching category ${t} products: ${e.message}`)}}async function m(t,r,e,o,c,n){try{const u=await s.get(`${a}/products/?limit=${d}&offset=${t}${r?"&price="+r:""}${e?"&price_min="+e:""}${o?"&price_max="+o:""}${c?"&title="+c:""}${n?"&categoryId="+n:""}`),i=await h(r,e,o,c,n);return{products:u.data,count:i}}catch(u){throw new Error(`Error fetching products: ${u.message}`)}}async function l(t,r,e){try{const o=await s.get(`${a}/products/?limit=${d}&offset=${t}${r?"&title="+r:""}${e?"&categoryId="+e:""}`),c=await w(r,e);return{products:o.data,count:c}}catch(o){throw new Error(`Error fetching products: ${o.message}`)}}async function $(t){try{return(await s.get(`${a}/categories/${t}/products`)).data.length}catch(r){if(r.code==="ERR_BAD_REQUEST")return null;throw new Error(`Error fetching category ${t} products: ${r.message}`)}}async function h(t,r,e,o,c){try{return(await s.get(`${a}/products/?${t?"&price="+t:""}${r?"&price_min="+r:""}${e?"&price_max="+e:""}${o?"&title="+o:""}${c?"&categoryId="+c:""}`)).data.length}catch(n){if(n.code==="ERR_BAD_REQUEST")return null;throw new Error(`Error fetching products: ${n.message}`)}}async function w(t,r){try{return(await s.get(`${a}/products/?${t?"&title="+t:""}${r?"&categoryId="+r:""}`)).data.length}catch(e){if(e.code==="ERR_BAD_REQUEST")return null;throw new Error(`Error fetching products: ${e.message}`)}}async function q(t){try{return(await s.delete(`${a}/products/${t}`)).data}catch(r){throw new Error(`Error deleting product with id ${t}: ${r.message}`)}}async function R(t){try{return(await s.post(`${a}/products/`,t)).data}catch(r){throw new Error(`Failed adding this product: ${r.message}`)}}async function _(t,r){try{return(await s.put(`${a}/products/${t}`,r)).data}catch(e){throw new Error(`Failed update product ${t}: ${e.message}`)}}export{l as a,E as b,R as c,q as d,m as e,y as f,_ as u};
